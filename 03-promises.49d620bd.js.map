{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAiBH,SAASC,cAAc,mBACxCG,EAAoBJ,SAASC,cAAc,mBAE7CI,EAAU,EACVC,EAAWC,OAAOR,EAAWS,OAC7BC,EAAQ,GAuBZL,EAAkBM,iBAAiB,SAAS,SAAAC,GAC1CA,EAAEC,iBACFN,EAAWC,OAAOR,EAAWS,OAC7BK,cAAcJ,GACdK,YAAW,WACTL,EAAQM,aAAY,WA1BxB,IAAuBC,EAAUC,EACzBC,GADeF,EA2BLX,EA3BeY,EA2BNX,EA1BnBY,EAAkB,CACtBF,SAAUA,EACVC,MAAOA,GAEA,IAAIE,SAAQ,SAACC,EAASC,GAC3B,I,IAAsBC,KAAKC,SAAW,GAEpCH,GAAUJ,GAAVQ,EAA8BN,GAApBF,SAAUC,EAAAO,EAAAP,MAAAO,IAEpBH,GAASL,GAATS,EAA6BP,GAApBF,SAAUC,EAAAQ,EAAAR,MAAAQ,IAErBpB,IACAC,GAAYC,OAAOL,EAAUM,OACzBH,GAAWE,OAAOJ,EAAeK,OAAS,IAC5CK,cAAcJ,GACdJ,EAAU,EAEd,KAUGqB,MAAK,SAAAC,G,IAAGX,EAAAW,EAAAX,SAAUC,EAAAU,EAAAV,MACrBW,EAAA/B,GAASgC,OAAOC,QAAQ,qBAAoCC,OAAff,EAAS,QAAYe,OAANd,EAAM,MACpE,IACKe,OAAM,SAAAL,G,IAAGX,EAAAW,EAAAX,SAAUC,EAAAU,EAAAV,MACtBW,EAAA/B,GAASgC,OAAOI,QAAQ,oBAAmCF,OAAff,EAAS,QAAYe,OAANd,EAAM,MACnE,GACF,GAAGf,EAAUM,MACX,GAAGT,EAAWS,MAChB,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst startDelay = document.querySelector('[name=\"delay\"]');\nconst stepDelay = document.querySelector('[name=\"step\"]');\nconst amountPromises = document.querySelector('[name=\"amount\"]');\nconst createPromisesBtn = document.querySelector('[type=\"submit\"]');\n\nlet counter = 1;\nlet delayInc = Number(startDelay.value);\nlet inter = \"\";\n\nfunction createPromise(position, delay) {\n  const counterContener = {\n    position: position,\n    delay: delay,\n  };\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay } = counterContener);\n      } else {\n        reject({ position, delay } = counterContener);\n      }\n      counter++;\n      delayInc += Number(stepDelay.value);\n      if (counter == Number(amountPromises.value) + 1) {\n        clearInterval(inter);\n        counter = 1;\n      }\n    });\n};\n\ncreatePromisesBtn.addEventListener('click', e => {\n  e.preventDefault();\n  delayInc = Number(startDelay.value);\n  clearInterval(inter);\n  setTimeout(() => {\n    inter = setInterval(() => {\n    createPromise(counter, delayInc)\n      .then(({ position, delay }) => {\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n      .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  });\n}, stepDelay.value)\n  }, startDelay.value)\n});"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$startDelay","document","querySelector","$ce04d3a99e08e73b$var$stepDelay","$ce04d3a99e08e73b$var$amountPromises","$ce04d3a99e08e73b$var$createPromisesBtn","$ce04d3a99e08e73b$var$counter","$ce04d3a99e08e73b$var$delayInc","Number","value","$ce04d3a99e08e73b$var$inter","addEventListener","e","preventDefault","clearInterval","setTimeout","setInterval","position","delay","counterContener","Promise","resolve","reject","Math","random","ref","ref1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.49d620bd.js.map"}