{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAiBH,SAASC,cAAc,mBACxCG,EAAoBJ,SAASC,cAAc,mBAEjD,IAAII,EAAU,EACVC,EAAWC,OAAOR,EAAWS,OAC7BC,EAAQ,GAuBZL,EAAkBM,iBAAiB,SAASC,IAC1CA,EAAEC,iBACFN,EAAWC,OAAOR,EAAWS,OAC7BK,cAAcJ,GACdK,YAAW,KACTL,EAAQM,aAAY,MA1BxB,SAAuBC,EAAUC,GAC/B,MAAMC,EAAkB,CACtBF,SAAUA,EACVC,MAAOA,GAEP,OAAO,IAAIE,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,IAAQJ,SAAEA,EAAQC,MAAEA,GAAUC,IAE9BG,IAAOL,SAAEA,EAAQC,MAAEA,GAAUC,IAE/Bb,IACAC,GAAYC,OAAOL,EAAUM,OACzBH,GAAWE,OAAOJ,EAAeK,OAAS,IAC5CK,cAAcJ,GACdJ,EAAU,EACZ,GAEN,EAQImB,CAAcnB,EAASC,GACpBmB,MAAK,EAACT,SAAEA,EAAQC,MAAEA,MACrBS,EAAA7B,GAAS8B,OAAOC,QAAQ,qBAAqBZ,QAAeC,MAAS,IAElEY,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MACtBS,EAAA7B,GAAS8B,OAAOG,QAAQ,oBAAoBd,QAAeC,MAAS,GACtE,GACCf,EAAUM,MAAK,GACbT,EAAWS,MAAK","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst startDelay = document.querySelector('[name=\"delay\"]');\nconst stepDelay = document.querySelector('[name=\"step\"]');\nconst amountPromises = document.querySelector('[name=\"amount\"]');\nconst createPromisesBtn = document.querySelector('[type=\"submit\"]');\n\nlet counter = 1;\nlet delayInc = Number(startDelay.value);\nlet inter = \"\";\n\nfunction createPromise(position, delay) {\n  const counterContener = {\n    position: position,\n    delay: delay,\n  };\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay } = counterContener);\n      } else {\n        reject({ position, delay } = counterContener);\n      }\n      counter++;\n      delayInc += Number(stepDelay.value);\n      if (counter == Number(amountPromises.value) + 1) {\n        clearInterval(inter);\n        counter = 1;\n      }\n    });\n};\n\ncreatePromisesBtn.addEventListener('click', e => {\n  e.preventDefault();\n  delayInc = Number(startDelay.value);\n  clearInterval(inter);\n  setTimeout(() => {\n    inter = setInterval(() => {\n    createPromise(counter, delayInc)\n      .then(({ position, delay }) => {\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n      .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  });\n}, stepDelay.value)\n  }, startDelay.value)\n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$startDelay","document","querySelector","$47d4ff9957288465$var$stepDelay","$47d4ff9957288465$var$amountPromises","$47d4ff9957288465$var$createPromisesBtn","$47d4ff9957288465$var$counter","$47d4ff9957288465$var$delayInc","Number","value","$47d4ff9957288465$var$inter","addEventListener","e","preventDefault","clearInterval","setTimeout","setInterval","position","delay","counterContener","Promise","resolve","reject","Math","random","$47d4ff9957288465$var$createPromise","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.871190a9.js.map"}